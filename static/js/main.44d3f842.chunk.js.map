{"version":3,"sources":["components/wordcloudJSON.js","components/WordCloud.js","components/HistoGramBar.js","components/HistoGramAxis.js","components/HistoGramBarChart.js","App.js","serviceWorker.js","index.js"],"names":["originalData","spreads","facebook","twitter","linkedin","syndicate","thought","spread","mainly","close","contact","person","including","people","physically","near","within","feet","infected","show","symptoms","also","virus","others","still","learning","severity","illness","causes","easily","vary","appears","efficiently","influenza","measles","among","contagious","viruses","known","affect","commonly","direct","greatest","risk","infection","cough","sneeze","sing","talk","breathe","produce","respiratory","droplets","range","size","larger","visible","smaller","small","form","particles","dry","quickly","airstream","infections","occur","exposure","someone","inhaled","deposited","mucous","membranes","line","inside","nose","mouth","travel","concentration","decreases","fall","air","due","gravity","apart","passing","time","amount","infectious","sometimes","airborne","transmission","linger","minutes","hours","may","able","infect","away","left","space","kind","referred","important","way","like","tuberculosis","chicken","pox","evidence","certain","conditions","seem","transmissions","occurred","enclosed","spaces","inadequate","ventilation","breathing","heavily","example","singing","exercising","circumstances","scientists","believe","droplet","produced","became","concentrated","enough","shortly","available","data","indicate","much","common","less","contaminated","surfaces","land","objects","possible","get","touching","surface","object","eyes","rarely","animals","situations","cdc","aware","number","pets","worldwide","cats","dogs","reported","mostly","learn","spreading","considered","protect","best","prevent","avoid","exposed","take","steps","slow","stay","least","whenever","preventing","cover","mask","around","helps","reduce","wash","hands","often","soap","water","hand","sanitizer","contains","alcohol","crowded","indoor","ensure","properly","ventilated","bringing","outdoor","general","outdoors","good","reduces","home","isolate","sick","routinely","clean","disinfect","frequently","touched","pandemics","stressful","especially","staying","maintain","social","connections","care","mental","health","result","prop","push","key","value","output","slice","WordCloud","width","height","fillColors","d3","ref","useRef","useEffect","svg","current","attr","cloud","words","map","d","text","test","padding","rotate","font","fontSize","spiral","on","append","selectAll","enter","style","x","y","start","className","HistoGramBar","xScale","yScale","highlightedBar","highlightBar","caseType","colorWheel","tot_cases","normal","highlight","new_death","new_case","onMouseOut","dailyData","index","submission_date","Date","fill","onMouseOver","HistoGramAxis","orient","scale","translate","tickSize","d3AxisContainer","console","log","axisType","axis","tickPadding","call","renderAxis","transform","HistoGramBarChart","margins","useState","currentHighlight","setCurrentHighlight","totalCases","e","yMaxDomains","caseMax","str","toString","length","findNearest","Math","max","domain","rangeRound","yAxisProps","endDate","toISOString","split","startDate","now","nice","xAxisProps","App","setCaseType","usHistoryData","setUsHistoryData","fetch","headers","then","resp","ok","Error","json","displayData","forEach","ele","reverse","catch","error","onClick","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.44d3f842.chunk.js","sourcesContent":["\n\nlet originalData = {\n    'covid 19': 25,\n    spreads: 8,\n    facebook: 1,\n    twitter: 1,\n    linkedin: 1,\n    syndicate: 1,\n    thought: 2,\n    spread: 15,\n    mainly: 2,\n    close: 6,\n    contact: 8,\n    person: 16,\n    including: 2,\n    people: 14,\n    physically: 2,\n    near: 2,\n    within: 3,\n    feet: 5,\n    infected: 6,\n    show: 1,\n    symptoms: 1,\n    also: 4,\n    virus: 12,\n    others: 8,\n    still: 1,\n    learning: 1,\n    severity: 1,\n    illness: 2,\n    causes: 5,\n    easily: 2,\n    vary: 1,\n    appears: 2,\n    efficiently: 2,\n    influenza: 1,\n    measles: 2,\n    among: 1,\n    contagious: 1,\n    viruses: 2,\n    known: 1,\n    affect: 1,\n    commonly: 2,\n    direct: 1,\n    greatest: 1,\n    risk: 4,\n    infection: 2,\n    cough: 1,\n    sneeze: 1,\n    sing: 1,\n    talk: 1,\n    breathe: 1,\n    produce: 1,\n    respiratory: 7,\n    droplets: 15,\n    range: 1,\n    size: 1,\n    larger: 2,\n    visible: 1,\n    smaller: 3,\n    small: 3,\n    form: 1,\n    particles: 4,\n    dry: 1,\n    quickly: 1,\n    airstream: 1,\n    infections: 3,\n    occur: 1,\n    exposure: 3,\n    someone: 1,\n    inhaled: 1,\n    deposited: 1,\n    mucous: 1,\n    membranes: 1,\n    line: 1,\n    inside: 1,\n    nose: 3,\n    mouth: 3,\n    travel: 1,\n    concentration: 1,\n    decreases: 2,\n    fall: 1,\n    air: 4,\n    due: 1,\n    gravity: 1,\n    apart: 1,\n    passing: 1,\n    time: 4,\n    amount: 2,\n    infectious: 3,\n    sometimes: 2,\n    airborne: 4,\n    transmission: 4,\n    linger: 1,\n    minutes: 1,\n    hours: 1,\n    may: 1,\n    able: 1,\n    infect: 1,\n    away: 4,\n    left: 2,\n    space: 2,\n    kind: 1,\n    referred: 1,\n    important: 3,\n    way: 3,\n    like: 1,\n    tuberculosis: 1,\n    chicken: 1,\n    pox: 1,\n    evidence: 1,\n    certain: 1,\n    conditions: 1,\n    seem: 1,\n    transmissions: 1,\n    occurred: 1,\n    enclosed: 1,\n    spaces: 4,\n    inadequate: 1,\n    ventilation: 2,\n    breathing: 1,\n    heavily: 1,\n    example: 1,\n    singing: 1,\n    exercising: 1,\n    circumstances: 1,\n    scientists: 1,\n    believe: 1,\n    droplet: 1,\n    produced: 1,\n    became: 1,\n    concentrated: 1,\n    enough: 1,\n    shortly: 1,\n    available: 2,\n    data: 1,\n    indicate: 1,\n    much: 2,\n    common: 2,\n    less: 1,\n    contaminated: 1,\n    surfaces: 4,\n    land: 1,\n    objects: 1,\n    possible: 3,\n    get: 1,\n    touching: 3,\n    surface: 1,\n    object: 1,\n    eyes: 1,\n    rarely: 1,\n    animals: 4,\n    situations: 1,\n    cdc: 1,\n    aware: 1,\n    number: 1,\n    pets: 3,\n    worldwide: 1,\n    cats: 1,\n    dogs: 1,\n    reported: 1,\n    mostly: 1,\n    learn: 3,\n    spreading: 1,\n    considered: 1,\n    protect: 2,\n    best: 1,\n    prevent: 1,\n    avoid: 2,\n    exposed: 1,\n    take: 1,\n    steps: 1,\n    slow: 1,\n    stay: 2,\n    least: 2,\n    whenever: 1,\n    preventing: 1,\n    cover: 1,\n    mask: 1,\n    around: 1,\n    helps: 1,\n    reduce: 1,\n    wash: 1,\n    hands: 1,\n    often: 1,\n    soap: 2,\n    water: 2,\n    hand: 1,\n    sanitizer: 1,\n    contains: 1,\n    '60%': 1,\n    alcohol: 1,\n    crowded: 1,\n    indoor: 2,\n    ensure: 1,\n    properly: 1,\n    ventilated: 1,\n    bringing: 1,\n    outdoor: 1,\n    general: 1,\n    outdoors: 1,\n    good: 1,\n    reduces: 1,\n    home: 1,\n    isolate: 1,\n    sick: 1,\n    routinely: 1,\n    clean: 1,\n    disinfect: 1,\n    frequently: 1,\n    touched: 1,\n    pandemics: 1,\n    stressful: 1,\n    especially: 1,\n    staying: 1,\n    'it’s': 1,\n    maintain: 1,\n    social: 1,\n    connections: 1,\n    care: 1,\n    mental: 1,\n    health: 1\n}\n\nlet result = []\nfor(let prop in originalData){\n    result.push({key: prop, value: originalData[prop]});\n}\nresult = result.slice(0,80)\n\nexport const output = result;","\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport cloud from 'd3-cloud';\nimport {output} from './wordcloudJSON'\n\nfunction WordCloud({ width, height }) {\n    const fillColors = d3.scaleOrdinal(d3.schemeDark2);\n    const ref = useRef();\n\n    useEffect(() => {\n        // console.log(output)\n        const svg = d3.select(ref.current)\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            // .style(\"border\", \"2px solid black\")\n\n\n        const draw = (words) => {\n            const group = svg\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + width/2 + \",\" + height/2 + \")\");\n\n                group.selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", function (d) { return d.size + \"px\"; })\n                .style(\"font-family\", \"Impact\")\n                .style(\"fill\", function(d) { return fillColors(d.size); })\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"transform\", function (d) {\n                    return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n                })\n                .text(function (d) { return d.text; });\n        }\n\n        let layout = cloud()\n            .size([960, 500])\n            .words(output.map(function (d) {\n                    return { text: d.key, size: 10 + d.value * 4, test: \"haha\" };\n                }))\n            .padding(5)\n            .rotate(function () { return d3.randomInt(-60, 60)(); })\n            .font(\"Impact\")\n            .fontSize(function (d) { return d.size; })\n            .spiral(\"rectangular\")\n            .on(\"end\", draw);\n\n        layout.start();\n\n    }, []);\n\n    return (\n        <div className=\"word-cloud\">\n            <svg ref={ref}>\n            </svg>\n        </div>\n    )\n}\n\nexport default WordCloud;","import React, {useEffect, useState} from 'react';\nimport * as d3 from \"d3\";\n\nfunction HistoGramBar({data, xScale, yScale, highlightedBar, highlightBar, caseType}) {\n\n    const colorWheel = {\n        tot_cases: {\n            normal: \"#FA8072\",\n            highlight: \"#DC143C\"\n        },\n        new_death: {\n            normal: \"#808080\",\n            highlight: \"#303030\"\n        },\n        new_case: {\n            normal: \"#FFA500\",\n            highlight: \"#FF4500\"\n        },\n\n    }\n\n    return (\n        <g onMouseOut={() => highlightBar(null)}>\n            { data.map((dailyData, index) =>\n                (<rect key={dailyData.submission_date}\n                       x={xScale(new Date(dailyData.submission_date))}\n                       y={yScale(dailyData[caseType])}\n                       height={350 - yScale(dailyData[caseType])}\n                       width={6}\n                       fill={highlightedBar === index ? colorWheel[caseType].highlight : colorWheel[caseType].normal}\n                       onMouseOver={() => highlightBar(index)}\n                />)\n            )}\n        </g>\n    )\n}\n\nexport default HistoGramBar;","import React, {useEffect, useRef} from 'react'\nimport * as d3 from 'd3'\n\nexport default function HistoGramAxis({orient, scale, tickSize, translate, caseType}) {\n\n    const d3AxisContainer = useRef(null)\n\n    const renderAxis = () => {\n        if (d3AxisContainer.current) {\n            console.log(d3AxisContainer.current)\n            const axisType = `axis${orient}`\n            const axis = d3[axisType]()\n                .scale(scale)\n                .tickPadding([12])\n\n            d3.select(d3AxisContainer.current).call(axis)\n        }\n    }\n\n    useEffect(() => {\n        renderAxis();\n    }, [caseType])\n\n    return (\n        <g\n            className={`Axis Axis-${orient}`}\n            ref={d3AxisContainer}\n            transform={translate}\n        />\n    )\n}","import React, {useEffect, useState, useRef} from 'react';\nimport * as d3 from \"d3\";\nimport HistoGramBar from \"./HistoGramBar\";\nimport HistoGramAxis from \"./HistoGramAxis\"\n\nfunction HistoGramBarChart({width, height, caseType, data}) {\n    const margins = {bottom: 50, left: 70, top: 20, right: 50}\n    const [currentHighlight, setCurrentHighlight] = useState(null);\n\n    const findNearest = (caseMax) => {\n        let str = caseMax.toString();\n        let result = ''\n        if (str[0] === '9') {\n            return 10 ** (str.length)\n        } else {\n            return (str[0] * 1 + 1) * 10 ** (str.length - 1)\n        }\n\n    }\n\n    let totalCases = data.map(e => e.tot_cases);\n    let newDeath = data.map(e => e.new_death);\n    let newCase = data.map(e => e.new_case);\n    let caseMax = Math.max(...totalCases);\n\n    // set max y values TODO: according to new death or new case adjust\n    const yMaxDomains = {\n        tot_cases: findNearest(caseMax),\n        new_death: 100,\n        new_case: 5000\n    }\n    const yScale = d3.scaleLinear()\n        // scaleLinear domain required at least two values, min and max\n        .domain([yMaxDomains[caseType], 0])\n        .rangeRound([0, height - margins.bottom - margins.top])\n\n    const yAxisProps = {\n        orient: 'Left',\n        scale: yScale,\n        translate: `translate(70, 20)`,\n        tickSize: 20,\n    }\n\n    const highlightBar = index => {\n        setCurrentHighlight(index)\n    }\n\n    const endDate = new Date().toISOString().split('T')[0];\n    const startDate = new Date(Date.now() - 89 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n\n    // console.log(\"startDate the \", startDate)\n    // console.log(\"endDate the same\", endDate)\n    // scaleBand type\n    const xScale = d3.scaleTime()\n        .domain([new Date(startDate), new Date(endDate)])\n        .rangeRound([margins.left, width - margins.right])\n        .nice()\n\n    const xAxisProps = {\n        orient: 'Bottom',\n        scale: xScale,\n        translate: `translate(0, 350)`,\n        tickSize: 25,\n    }\n\n\n    return (\n        <div>\n            {\n                (data && data.length > 0) ? (<svg className=\"histogram-bar-chart\" width={width} height={height}>\n                    <HistoGramBar data={data} xScale={xScale} yScale={yScale} highlightBar={highlightBar}\n                                  highlightedBar={currentHighlight} caseType={caseType}/>\n                    <HistoGramAxis {...xAxisProps} />\n                    <HistoGramAxis {...yAxisProps} caseType={caseType}/>\n                </svg>) : <div></div>\n            }\n        </div>\n    )\n}\n\nexport default HistoGramBarChart;","import React, { useEffect, useState } from \"react\";\nimport WordCloud from \"./components/WordCloud\";\nimport HistoGramBarChart from \"./components/HistoGramBarChart\";\nimport \"./App.css\";\n\nfunction App() {\n  const [caseType, setCaseType] = useState(\"new_case\");\n  const [usHistoryData, setUsHistoryData] = useState([]);\n\n  // console.log(\"App top level render\")\n\n  useEffect(() => {\n    const opts = {\n      headers: {\n        \"X-App-Token\": \"GRSvmK72hJ6S3Mj4vxoEQGvTe\",\n      },\n    };\n    fetch(\"https://data.cdc.gov/resource/9mfq-cb36.json?state=PA&&$where=submission_date >= '2021-06-10T12:00:00'&&$order=submission_date\", opts)\n      .then((resp) => {\n        if (!resp.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return resp.json();\n      })\n      .then((data) => {\n        let displayData = data.slice(0, 88);\n        console.log(displayData);\n        displayData.forEach((ele) => {\n          ele.submission_date = ele.submission_date.slice(0,10);\n        });\n        console.log(\"comes back from API\", displayData);\n        displayData = displayData.reverse();\n        setUsHistoryData(displayData);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n\n    // componentWillUnmount\n    return () => {\n      // console.log(\"clean up side effects\")\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <WordCloud width={900} height={450} />\n      <div className=\"histogram-title\">COVID 19 Cases in U.S.A</div>\n      <div className=\"histogram-label-section\">\n  \n        <div\n          className=\"histogram-label\"\n          onClick={() => {\n            setCaseType(\"new_case\");\n          }}\n        >\n          <span className=\"histogram-label-icon\" style={{ backgroundColor: \"#FFA500\" }}></span> New daily cases\n        </div>\n        <div\n          className=\"histogram-label\"\n          onClick={() => {\n            setCaseType(\"new_death\");\n          }}\n        >\n          <span className=\"histogram-label-icon\" style={{ backgroundColor: \"#808080\" }}></span> New death cases\n        </div>\n        <div\n          className=\"histogram-label\"\n          onClick={() => {\n            setCaseType(\"tot_cases\");\n          }}\n        >\n          <span className=\"histogram-label-icon\" style={{ backgroundColor: \"#FA8072\" }}></span> Overall cases\n        </div>\n      </div>\n      <HistoGramBarChart width={900} height={400} caseType={caseType} data={usHistoryData} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}